apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: database-credentials
  namespace: my-application
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: aws-secretsmanager
    kind: ClusterSecretStore
  target:
    name: db-credentials
    creationPolicy: Owner
    template:
      metadata:
        labels:
          app: my-application
        annotations:
          app.kubernetes.io/managed-by: external-secrets-operator
      engineVersion: v2
      data:
        # Transform the data as needed using templates
        config.yaml: |
          database:
            host: {{ .host }}
            port: {{ .port }}
            username: {{ .username }}
            password: {{ .password }}
  data:
    - secretKey: username
      remoteRef:
        key: my-application/database
        property: username
    - secretKey: password
      remoteRef:
        key: my-application/database
        property: password
    - secretKey: host
      remoteRef:
        key: my-application/database
        property: host
    - secretKey: port
      remoteRef:
        key: my-application/database
        property: port
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: api-keys
  namespace: my-application
spec:
  refreshInterval: "15m"  # Shorter refresh interval for API keys
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: api-keys
    creationPolicy: Owner
  data:
    - secretKey: stripe-api-key
      remoteRef:
        key: my-application/api-keys
        property: stripe
    - secretKey: sendgrid-api-key
      remoteRef:
        key: my-application/api-keys
        property: sendgrid
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: tls-certificate
  namespace: my-application
spec:
  refreshInterval: "24h"  # Longer refresh for certificates
  secretStoreRef:
    name: aws-secretsmanager
    kind: ClusterSecretStore
  target:
    name: tls-cert
    creationPolicy: Owner
    template:
      type: kubernetes.io/tls  # Specify the secret type
  data:
    - secretKey: tls.crt
      remoteRef:
        key: my-application/tls-certificate
        property: certificate
    - secretKey: tls.key
      remoteRef:
        key: my-application/tls-certificate
        property: private-key
